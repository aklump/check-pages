#!/usr/bin/env bash

#
# Create a test directory w/scaffold files.
#
source="${BASH_SOURCE[0]}"
source="${BASH_SOURCE[0]}"
if [[ ! "$source" ]]; then
  source="${(%):-%N}"
fi
while [ -h "$source" ]; do # resolve $source until the file is no longer a symlink
  dir="$( cd -P "$( dirname "$source" )" && pwd )"
  source="$(readlink "$source")"
  [[ $source != /* ]] && source="$dir/$source" # if $source was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
APP_ROOT="$( cd -P "$( dirname "$source" )" && pwd )"

need_input=true
while [[ "$need_input" == true ]]; do
  echo
  echo "A directory for your tests can be created with scaffolding files at this time."
  echo "To do so, enter a path to a non-existent directory or leave blank to skip."
  read -e -p "What path? " tests_dir

  if [[ "$tests_dir" == "" ]]; then
    need_input=false
  else
    if [[ ! -d "$tests_dir" ]]; then
      need_input=false
    else
      echo -e "$(tput setaf 1)$tests_dir already exists; try again.$(tput sgr0)"
    fi
  fi
done

if [[ "$tests_dir" ]]; then
  ! mkdir -p "$tests_dir" && echo "Could not create $tests_dir" && exit 1
  rsync -aq "$APP_ROOT/init_scaffold/" "$PWD/$tests_dir"
  echo "files" >> "$PWD/$tests_dir/.gitignore"
  echo "users*" >> "$PWD/$tests_dir/.gitignore"
  echo -e "$(tput setaf 2)Test directory \"$tests_dir\" creating with test scaffolding.$(tput sgr0)"
else
  echo "Skipped. You may execute $0, when you are ready."
fi

