#!/usr/bin/env php
<?php
/**
 * @file
 * Entry file for Check Pages CLI.
 */

if (file_exists(__DIR__ . '/../../autoload.php')) {
  require __DIR__ . '/../../autoload.php';
}
else {
  require __DIR__ . '/vendor/autoload.php';
}

use AKlump\CheckPages\CheckPages;
use AKlump\CheckPages\Command\RunCommand;
use AKlump\CheckPages\Files\LocalFilesProvider;
use AKlump\CheckPages\Parts\Runner;
use AKlump\CheckPages\Plugin\PluginsManager;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;
use Symfony\Component\DependencyInjection\ContainerBuilder;

global $container;
$container = new ContainerBuilder();

$root_files = new LocalFilesProvider(__DIR__);

// This will load the services into the $container.
$loader = new YamlFileLoader($container, $root_files);
$loader->load('services.DO_NOT_EDIT.yml');

$application = new Application();
$application->setName('Check Pages by In the Loft Studios');

$composer_json = $root_files->tryResolveFile('composer.json')[0];
$version = json_decode(file_get_contents($composer_json))->version ?? '';
$application->setVersion($version);

$path_to_plugins = realpath($root_files->tryResolveDir('includes/' . CheckPages::DIR_HANDLERS)[0]);
$plugins_manager = new PluginsManager($path_to_plugins);
$schema_path = $root_files->tryResolveFile(Runner::SCHEMA_VISIT, ['json'])[0];
$schema = json_decode(file_get_contents($schema_path), TRUE);
$plugins_manager->setSchema($schema);
$container->set('plugins_manager', $plugins_manager);

$application->add(new RunCommand($root_files));

// Expose commands to plugins via events.
foreach ($application->all() as $command) {
  if ($command->getName() === 'run') {
    $command->addOption('debug', NULL, InputOption::VALUE_OPTIONAL);
  }

  // TODO setup an event for plugins to add options to a command.
  // @see \AKlump\CheckPages\Parts\Runner::getDispatcher()
}

$application->run();
